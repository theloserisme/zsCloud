server:
  port: 9080
spring:
  application:
    name: UserServerCenter
  datasource:
    url: jdbc:mysql://localhost:3306/threeschool?serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # druid 数据源专有配置
    druid:
      mysql: usePingMethod=false
        # 初始化大小，最小，最大
      initial-size: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validation-query: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      # 如果允许时报错 java.lang.ClassNotFoundException: org.apache.log4j.Priority
      # 则导入 log4j 依赖即可
      # 配置监控统计拦截的filters, stat：监控统计、log4j：日志记录、wall:防御sql注入
      filters: stat,wall,log4j
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergesql=true;druid.stat.slowSqlMillis=5000


#    # 下面为连接池的补充设置，应用到上面所有数据源中
#    # 初始化大小，最小，最大
#    initial-size: 5
#    min-idle: 5
#    max-active: 20
#    # 配置获取连接等待超时的时间
#    max-wait: 60000
#    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#    time-between-eviction-runs-millis: 60000
#    # 配置一个连接在池中最小生存的时间，单位是毫秒
#    min-evictable-idle-time-millis: 300000
#    validation-query: SELECT 1 FROM DUAL
#    test-while-idle: true
#    test-on-borrow: false
#    test-on-return: false
#    # 打开PSCache，并且指定每个连接上PSCache的大小
#    pool-prepared-statements: true
#    max-pool-prepared-statement-per-connection-size: 20
#      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙   日志 log4j
#      #filters: stat,wall,log4j   #导入了log4j
#    use-global-data-source-stat: true
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

